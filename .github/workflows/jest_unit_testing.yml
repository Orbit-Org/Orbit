#!/bin/bash
name: Jest Unit Testing

on:
 push:
 pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install Dependencies web
        working-directory: web
        run: pnpm i
      - name: Install Dependencies app
        working-directory: app
        run: pnpm i
      - name: Build web
        working-directory: web
        run : pnpm build
      - name: Build app
        working-directory: app
        run : pnpm build
        env:
          NEXT_PUBLIC_API_URL: ${{secret.NEXT_PUBLIC_API_URL}}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{secret.NEXT_PUBLIC_FIREBASE_API_KEY}}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{secret.NEXT_PUBLIC_FIREBASE_APP_ID}}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{secret.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{secret.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{secret.NEXT_PUBLIC_FIREBASE_PROJECT_ID}}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{secret.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}}
      - name: Add permission to bash script
        working-directory: .github
        run: chmod +x updateVersions.sh
      - name: Update package.json App patch
        working-directory: app
        run: ../.github/updateVersions.sh
        if: github.event_name == 'push'
      - name: Update package.json Web patch
        working-directory: web
        run: ../.github/updateVersions.sh
        if: github.event_name == 'push'
      - name : Update package.json App minor
        working-directory: app
        run: npm version minor | git push
        if: github.event_name == 'pull_request'
      - name : Update package.json Web minor
        working-directory: Web
        run: npm version minor | git push
        if: github.event_name == 'pull_request'

  lint:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Linting web
        working-directory : web
        run: pnpm lint
      - name: Linting app
        working-directory: app
        run: pnpm lint

  tests:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Jest Unit Testing
        working-directory: web
        run: pnpm test
        env:
          NEO4J_URI: ${{ secrets.NEO4J_URI }}
          NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
          NEO4J_USERNAME: ${{ secrets.NEO4J_USERNAME }}

          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_BUCKET_ID : ${{ secrets.FIREBASE_BUCKET_ID }}
